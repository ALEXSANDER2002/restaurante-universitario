services:
  app:
    build: .
    container_name: app
    ports:
      - "3000:3000"
    depends_on:
      db:
        condition: service_healthy  # ✅ Agora o app espera o MySQL ficar pronto
    environment:
      - MYSQL_HOST=db   # Nome do serviço do MySQL no Docker
      - MYSQL_PORT=3306  # O MySQL dentro do container usa 3306
      - MYSQL_USER=root
      - MYSQL_PASSWORD=admin
      - MYSQL_DATABASE=restaurante_universitario
    networks:
      - app-network

  db:
    image: mysql:8.0
    container_name: db
    environment:
      MYSQL_ROOT_PASSWORD: admin
      MYSQL_DATABASE: restaurante_universitario
    ports:
      - "3307:3306"  # ✅ Corrigido para que o app se conecte corretamente
    volumes:
      - ./mysql-scripts/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - app-network
    command: --default-authentication-plugin=mysql_native_password
    healthcheck:  # ✅ O MySQL só será considerado "pronto" quando puder aceitar conexões
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5

networks:
  app-network:
    driver: bridge
