#versao do docker compose
version: '3.8'

#os serviços que serão utilizados, que é o front-end, back-end e o banco de dados
services:
  front:
  #quando fazemos o build do front-end, ele vai pegar o arquivo Dockerfile que está dentro da pasta front-end
    build:
        context: ./front-end
    ports:
        - "8080:80"
    #aqui nos mapeamos a pasta front-end para o container
    volumes:
    - ./front-end:/usr/share/nginx/html
    #conectamos o front-end a rede criada
    networks:
    - minha-rede

  back:
  #aqui fazemos o build do back-end, que vai pegar o arquivo Dockerfile que está dentro da pasta back-end
    build:
        context: ./back-end
    ports:
        - "3000:3000"
    #aqui conectamos o back-end ao banco de dados com as variáveis de ambiente
    #que é o nome da pasta, usuário, senha e o nome do banco de dados
    environment:
      - DB_HOST=db
      - DB_USER=admin
      - DB_PASSWORD=admin123
      - DB_NAME=bancao
      - SECRET_KEY=secret
    depends_on:
      - db
    networks:
    - minha-rede

  #aqui criamos o banco de dados mysql
  db: 
    image: mysql:latest
    container_name: mysql
    #restart sempre que o container cair
    restart: always
    #variáveis de ambiente para o banco de dados
    #que é a senha do root, o nome do banco de dados, o usuário e a senha
    environment:
      MYSQL_ROOT_PASSWORD: admin123
      MYSQL_DATABASE: bancao
    ports:
      - "3307:3306"
      #aqui mapeamos a pasta do banco de dados para o container
      #e um arquivo para inicializar o banco de dados que é o init.sql
    volumes:
      - ./bancao:/var/lib/mysql
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - minha-rede

#criamos a rede para conectar os containers
networks:
  minha-rede:

#criamos o volume para o banco de dados
volumes:
  bancao: